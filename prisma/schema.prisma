// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum Location {
//   UNRECEIVED
//   WAREHOUSE
// }

// enum Role {
//   ADMIN
//   MANAGER
//   USER
// }
// enum PurchaseStatus {
//   OPEN
//   CLOSE
//   CANCELLED
// }
//
// enum ItemStatus {
//ORDERED
//RECEIVED
//DISPATCHED
//   CLOSE
//   CANCELLED
// }

// enum Status {
//   PENDING
//   APPROVED
//   REJECTED
//   COMPLETED
// }

model Departments {
  Dep_id            Int                 @id @default(autoincrement())
  Dep_name          String              @unique
  User              User[]
  InventoryRequests InventoryRequests[]
}

model User {
  User_id               Int         @id @default(autoincrement())
  User_code             String      @unique() @default(uuid())
  User_dni              Int         @unique
  User_role             String
  User_name             String
  User_surname          String
  User_email            String      @unique
  User_password         String
  User_phoneNumber      String      @unique
  User_address          String
  User_active           Boolean     @default(true)
  User_registrationDate DateTime    @default(now())
  User_depId            Int
  Departments           Departments @relation(fields: [User_depId], references: [Dep_id])

  Supplier    Supplier[]
  Customer    Customer[]
  Procurement Procurement[]

  ProvisionRequests ProvisionRequests[]
  StockMovement     StockMovement[]
  Sale              Sale[]
  Category          Category[]
  ProcurementNote   ProcurementNote[]
  Product           Product[]
  Inventory         Inventory[]
  Item              Item[]

  @@index([User_email, User_phoneNumber, User_dni])
}

model Customer {
  Cust_id               Int      @id @default(autoincrement())
  Cust_dni              Int      @unique
  Cust_name             String
  Cust_surname          String
  Cust_email            String   @unique
  Cust_phoneNumber      String
  Cust_address          String
  Cust_habeasData       Boolean  @default(true)
  Cust_registrationDate DateTime @default(now())
  createdBy             Int
  User                  User     @relation(fields: [createdBy], references: [User_id])
  Sale                  Sale[]
}

model Supplier {
  Supp_id               Int      @id @default(autoincrement())
  Supp_nit              Int      @unique
  Supp_name             String
  Supp_contactInfo      String
  Supp_email            String   @unique
  Supp_phoneNumber      String
  Supp_city             String
  Supp_address          String
  Supp_active           Boolean  @default(true)
  Supp_registrationDate DateTime @default(now())

  createdBy   Int
  User        User          @relation(fields: [createdBy], references: [User_id])
  Procurement Procurement[]
}

model Category {
  Cat_id    Int       @id @default(autoincrement())
  Cat_name  String    @unique
  Product   Product[]
  createdBy Int
  User      User      @relation(fields: [createdBy], references: [User_id])
}

model Procurement {
  Proc_id            Int      @id @default(autoincrement())
  Proc_desc          String //Descriocion de la compra
  Proc_date          DateTime @default(now())
  Proc_totalAmount   Decimal  @default(0)
  Proc_paymentMethod String
  Proc_dueDate       DateTime
  Proc_close         Boolean  @default(false)
  Proc_processed     Boolean  @default(false)

  createdBy   Int
  User        User     @relation(fields: [createdBy], references: [User_id])
  Proc_suppId Int
  Supplier    Supplier @relation(fields: [Proc_suppId], references: [Supp_id])
  Item        Item[]

  ProcurementNotes ProcurementNote[]

  StockMovement StockMovement[]
}

model Item {
  Item_id          Int     @id @default(autoincrement())
  Item_unitCost    Decimal
  Item_qtyOrdered  Int
  Item_totalAmount Decimal
  Item_qtyReceived Int     @default(0)
  Item_location    String  @default("UNRECEIVED")
  Item_status      String  @default("ORDERED")
  Item_prodId      Int
  Item_procId      Int
  createdBy        Int

  Procurement Procurement @relation(fields: [Item_procId], references: [Proc_id])
  Product     Product     @relation(fields: [Item_prodId], references: [Prod_id])
  User        User        @relation(fields: [createdBy], references: [User_id])

  SaleDetails SaleDetails[]
  Inventory   Inventory[]

}

model Product {
  Prod_id                 Int     @id @default(autoincrement())
  Prod_name               String  @unique()
  Prod_ref                String  @unique()
  Prod_desc               String
  Prod_catId              Int
  Prod_procurementEnabled Boolean @default(true) // Habilitado para compras
  Prod_brand              String?
  Prod_unitMeasure String


  createdBy Int
  createdAt DateTime @default(now())

  // Relaciones
  Category          Category            @relation(fields: [Prod_catId], references: [Cat_id])
  ProvisionRequests ProvisionRequests[]
  User              User                @relation(fields: [createdBy], references: [User_id])

  Inventories   Inventory[]
  StockMovement StockMovement[]

  Item Item[]
}

model Inventory {
  Inv_id             Int       @id @default(autoincrement())
  Inv_prodId         Int
  Inv_stock          Int
  Inv_saleEnabled    Boolean   @default(true) // Antes: Inv_active → Ahora: Habilitado para Venta
  Inv_location       String    @default("Bodega")
  Inv_itemId         Int // Para relacionar con la compra
  Inv_batch          String
  Inv_batchDueDate   DateTime
  Inv_margin         Decimal   @default(0.15)
  Inv_marginValidity DateTime? //Para indicar hasta cuándo está activo el margen, útil para promociones

  createdAt DateTime @default(now())
  createdBy Int

  // Relaciones
  Product       Product         @relation(fields: [Inv_prodId], references: [Prod_id])
  Item          Item            @relation(fields: [Inv_itemId], references: [Item_id])
  User          User            @relation(fields: [createdBy], references: [User_id])
  StockMovement StockMovement[]
}

model ProcurementNote {
  Note_id        Int      @id @default(autoincrement())
  Note_content   String
  Note_createdAt DateTime @default(now())
  Note_userId    Int
  User           User     @relation(fields: [Note_userId], references: [User_id])

  Note_procId Int
  Procurement Procurement @relation(fields: [Note_procId], references: [Proc_id])

  @@index([Note_procId])
}

model ProvisionRequests {
  Prov_id          Int      @id @default(autoincrement())
  Prov_prodId      Int
  Prov_quantity    Int
  Prov_status      String   @default("pending")
  Prov_desc        String
  Prov_requestedBy Int
  createdAt        DateTime @default(now())

  Product Product @relation(fields: [Prov_prodId], references: [Prod_id])

  User User @relation(fields: [Prov_requestedBy], references: [User_id])
}

model StockMovement {
  Mov_id     Int      @id @default(autoincrement())
  Mov_type   String // "entrada", "salida"
  Mov_qty    Int
  Mov_reason String // Razón del movimiento (e.g., "venta", "compra", "ajuste")
  Mov_prodId Int
  Mov_dest   String   @default("bodega") // (e.g., ventas, garantías, ...)
  Mov_userId Int
  Mov_procId Int? // ID relacionado (e.g., Sale_id o Purchase_id)
  Mov_saleId Int? // ID relacionado (e.g., Sale_id o Purchase_id)
  createdAt  DateTime @default(now())

  Product         Product      @relation(fields: [Mov_prodId], references: [Prod_id])
  Procurement     Procurement? @relation(fields: [Mov_procId], references: [Proc_id])
  Sale            Sale?        @relation(fields: [Mov_saleId], references: [Sale_id])
  User            User         @relation(fields: [Mov_userId], references: [User_id])
  Inventory       Inventory?   @relation(fields: [InventoryInv_id], references: [Inv_id])
  InventoryInv_id Int?

  @@index([Mov_prodId, Mov_dest, Mov_type])
}

model InventoryRequests {
  Req_id     Int     @id @default(autoincrement())
  Req_prodId Int
  Req_depId  Int
  Req_desc   String
  Req_qty    Int
  Req_close  Boolean @default(false)

  Department Departments @relation(fields: [Req_depId], references: [Dep_id])

  @@index([Req_prodId])
}

model Sale {
  Sale_id          Int             @id @default(autoincrement())
  Sale_date        DateTime        @default(now())
  Sale_code        String?         @unique
  Sale_custId      Int
  Customer         Customer        @relation(fields: [Sale_custId], references: [Cust_id], onDelete: Cascade)
  Sale_totalAmount Decimal
  Sale_userId      Int
  SaleSummary      SalesSummary?
  SaleDetails      SaleDetails[]
  User             User            @relation(fields: [Sale_userId], references: [User_id])
  StockMovement    StockMovement[]
}

model SaleDetails {
  Sxdet_id            Int          @id @default(autoincrement())
  Sxdet_saleId        Int
  Sales               Sale         @relation(fields: [Sxdet_saleId], references: [Sale_id])
  Sxdet_prodId        Int
  Sxdet_qty           Int
  Sxdet_unitPrice     Decimal
  Sxdet_total         Decimal
  Warranty            Warranty[]
  Devolution          Devolution[]
  Item                Item?        @relation(fields: [purchaseItemItem_id], references: [Item_id])
  purchaseItemItem_id Int?
}

model Warranty {
  Warranty_id           Int         @id @default(autoincrement())
  Warranty_description  String
  Warranty_date         DateTime    @default(now())
  Warranty_saleDetailId Int
  SaleDetail            SaleDetails @relation(fields: [Warranty_saleDetailId], references: [Sxdet_id])
}

model SalesSummary {
  SalesSumm_id          Int      @id @default(autoincrement())
  SalesSumm_saleId      Int      @unique
  Sale                  Sale     @relation(fields: [SalesSumm_saleId], references: [Sale_id])
  SalesSumm_totalAmount Decimal
  SalesSumm_date        DateTime
}

model ExpenseSummary {
  ExpSumm_id            Int      @id @default(autoincrement())
  ExpSumm_purchaseId    Int      @unique
  ExpSumm_totalExpenses Decimal
  ExpSumm_date          DateTime
}

model Devolution {
  Dev_id            Int         @id @default(autoincrement())
  Dev_description   String
  Dev_saleDetailsId Int
  Dev_quantity      Int
  Dev_unitPrice     Decimal
  Dev_date          DateTime    @default(now())
  SaleDetails       SaleDetails @relation(fields: [Dev_saleDetailsId], references: [Sxdet_id])
}
